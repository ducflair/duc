name: Release Coordinator

on:
  push:
    branches:
      - main
      - next
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to trigger (ducjs, ducsvg, ducpy, ducrs, web, all)'
        required: true
      force:
        description: 'Force trigger even if no changes detected'
        required: false
        default: 'true'

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  # Job to detect which files have changed
  paths:
    runs-on: ubuntu-latest
    outputs:
      ducjs_changed: ${{ steps.filter.outputs.ducjs }}
      ducpy_changed: ${{ steps.filter.outputs.ducpy }}
      ducrs_changed: ${{ steps.filter.outputs.ducrs }}
      ducsvg_changed: ${{ steps.filter.outputs.ducsvg }}
      web_changed: ${{ steps.filter.outputs.web }}
      commit_message: ${{ github.event.head_commit.message }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            ducjs:
              - 'packages/ducjs/**'
            ducpy:
              - 'packages/ducpy/**'
            ducrs:
              - 'packages/ducrs/**'
            ducsvg:
              - 'packages/ducsvg/**'
            web:
              - 'apps/web/**'

  trigger_ducjs_release:
    needs: paths
    runs-on: ubuntu-latest
    if: |
      needs.paths.outputs.ducjs_changed == 'true' ||
      contains(needs.paths.outputs.commit_message, '(ducjs)')
    steps:
      - name: Trigger TypeScript Release
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: trigger-ducjs-release
          token: ${{ secrets.GITHUB_TOKEN }}

  trigger_ducsvg_release:
    needs: paths
    runs-on: ubuntu-latest
    if: |
      needs.paths.outputs.ducsvg_changed == 'true' ||
      contains(needs.paths.outputs.commit_message, '(ducsvg)')
    steps:
      - name: Trigger ducsvg Release
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: trigger-ducsvg-release
          token: ${{ secrets.GITHUB_TOKEN }}

  trigger_py_release:
    needs: paths
    runs-on: ubuntu-latest
    if: |
      needs.paths.outputs.ducpy_changed == 'true' ||
      contains(needs.paths.outputs.commit_message, '(ducpy)')
    outputs:
      status: ${{ steps.status.outputs.result }}
    steps:
      - name: Trigger Python Release
        id: py_release
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: trigger-py-release
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set status
        id: status
        run: echo "result=success" >> $GITHUB_OUTPUT

  trigger_rs_release:
    needs: paths
    runs-on: ubuntu-latest
    if: |
      needs.paths.outputs.ducrs_changed == 'true' ||
      contains(needs.paths.outputs.commit_message, '(ducrs)')
    steps:
      - name: Trigger Rust Release
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: trigger-rs-release
          token: ${{ secrets.GITHUB_TOKEN }}
          
  trigger_web_deploy:
    needs: [paths, trigger_py_release]
    runs-on: ubuntu-latest
    if: |
      always() && 
      (
        needs.paths.outputs.web_changed == 'true' || 
        (needs.trigger_py_release.result == 'success' && needs.trigger_py_release.outputs.status == 'success')
      )
    steps:
      - name: Trigger Web Deployment
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: trigger-web-deployment
          token: ${{ secrets.GITHUB_TOKEN }}
          client-payload: '{"source": "release-coordinator", "web_changed": "${{ needs.paths.outputs.web_changed }}", "release_success": "true"}'

  # Manual trigger for a specific package (runs only on workflow_dispatch)
  manual_trigger:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Trigger ducjs (manual)
        if: ${{ github.event.inputs.package == 'ducjs' || github.event.inputs.package == 'all' }}
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: trigger-ducjs-release
          token: ${{ secrets.GITHUB_TOKEN }}
          client-payload: '{"source": "release-coordinator-manual", "force": true}'

      - name: Trigger ducsvg (manual)
        if: ${{ github.event.inputs.package == 'ducsvg' || github.event.inputs.package == 'all' }}
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: trigger-ducsvg-release
          token: ${{ secrets.GITHUB_TOKEN }}
          client-payload: '{"source": "release-coordinator-manual", "force": true}'

      - name: Trigger ducpy (manual)
        if: ${{ github.event.inputs.package == 'ducpy' || github.event.inputs.package == 'all' }}
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: trigger-py-release
          token: ${{ secrets.GITHUB_TOKEN }}
          client-payload: '{"source": "release-coordinator-manual", "force": true}'

      - name: Trigger ducrs (manual)
        if: ${{ github.event.inputs.package == 'ducrs' || github.event.inputs.package == 'all' }}
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: trigger-rs-release
          token: ${{ secrets.GITHUB_TOKEN }}
          client-payload: '{"source": "release-coordinator-manual", "force": true}'

      - name: Trigger web deployment (manual)
        if: ${{ github.event.inputs.package == 'web' || github.event.inputs.package == 'all' }}
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: trigger-web-deployment
          token: ${{ secrets.GITHUB_TOKEN }}
          client-payload: '{"source": "release-coordinator-manual", "web_changed": "true", "release_success": "true", "force": true}'
name: Release

on:
  push:
    branches:
      - main
      - next

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  # Job to detect which files have changed
  paths:
    runs-on: ubuntu-latest
    outputs:
      core_changed: ${{ steps.filter.outputs.core }}
      duc_ts_changed: ${{ steps.filter.outputs.duc_ts }}
      duc_py_changed: ${{ steps.filter.outputs.duc_py }}
      duc_rs_changed: ${{ steps.filter.outputs.duc_rs }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            core:
              - 'packages/core/**'
              - 'turbo.json'
              - 'package.json'
            duc_ts:
              - 'packages/duc-ts/**'
            duc_py:
              - 'packages/duc-py/**'
            duc_rs:
              - 'packages/duc-rs/**'

  # Release job for duc-ts package
  release_duc_ts:
    runs-on: ubuntu-latest
    needs: paths
    concurrency:
      group: release-duc-ts
      cancel-in-progress: false
    if: needs.paths.outputs.core_changed == 'true' || needs.paths.outputs.duc_ts_changed == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch and Update Local Branch
        run: |
          git fetch origin main
          git reset --hard origin/main
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "latest"
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Update npm
        run: npm install -g npm@latest
      - run: bun install
      - name: Replace workspace dependencies
        run: |
          sed -i 's/"workspace:\*"/"*"/g' packages/duc-ts/package.json
      - name: Build
        run: bun duc-ts:build
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_LEGACY_PEER_DEPS: "true"
        run: npx semantic-release --ci
        working-directory: ./packages/duc-ts
      - name: Restore `package.json` to maintain `0.0.0-development`
        run: |
          git checkout packages/duc-ts/package.json

  # Release job for duc-py package
  release_duc_py:
    runs-on: ubuntu-latest
    needs: paths
    concurrency:
      group: release-duc-py
      cancel-in-progress: false
    if: needs.paths.outputs.core_changed == 'true' || needs.paths.outputs.duc_py_changed == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch and Update Local Branch
        run: |
          git fetch origin main
          git reset --hard origin/main
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "latest"
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Update npm
        run: npm install -g npm@latest
      - run: bun install
      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install build twine
      - name: Build
        run: bun duc-py:build
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: npx semantic-release --ci
        working-directory: ./packages/duc-py

  # Release job for duc-rs package
  release_duc_rs:
    runs-on: ubuntu-latest
    needs: paths
    concurrency:
      group: release-duc-rs
      cancel-in-progress: false
    if: needs.paths.outputs.core_changed == 'true' || needs.paths.outputs.duc_rs_changed == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch and Update Local Branch
        run: |
          git fetch origin main
          git reset --hard origin/main
      - name: Pull latest changes from origin/main
        run: git pull origin main --rebase
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "latest"
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Update Rust toolchain
        run: rustup update stable
      - name: Update npm
        run: npm install -g npm@latest
      - run: bun install
      - name: Build
        run: bun duc-rs:build
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: npx semantic-release --ci
        working-directory: ./packages/duc-rs

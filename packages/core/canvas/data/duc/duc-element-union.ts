// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { DucFrameElement } from '../duc/duc-frame-element.js';
import { DucFreeDrawElement } from '../duc/duc-free-draw-element.js';
import { DucGroupElement } from '../duc/duc-group-element.js';
import { DucIframeElement } from '../duc/duc-iframe-element.js';
import { DucImageElement } from '../duc/duc-image-element.js';
import { DucLinearElement } from '../duc/duc-linear-element.js';
import { DucMagicFrameElement } from '../duc/duc-magic-frame-element.js';
import { DucTextElement } from '../duc/duc-text-element.js';


export enum DucElementUnion {
  NONE = 0,
  DucTextElement = 1,
  DucLinearElement = 2,
  DucFreeDrawElement = 3,
  DucImageElement = 4,
  DucFrameElement = 5,
  DucGroupElement = 6,
  DucMagicFrameElement = 7,
  DucIframeElement = 8
}

export function unionToDucElementUnion(
  type: DucElementUnion,
  accessor: (obj:DucFrameElement|DucFreeDrawElement|DucGroupElement|DucIframeElement|DucImageElement|DucLinearElement|DucMagicFrameElement|DucTextElement) => DucFrameElement|DucFreeDrawElement|DucGroupElement|DucIframeElement|DucImageElement|DucLinearElement|DucMagicFrameElement|DucTextElement|null
): DucFrameElement|DucFreeDrawElement|DucGroupElement|DucIframeElement|DucImageElement|DucLinearElement|DucMagicFrameElement|DucTextElement|null {
  switch(DucElementUnion[type]) {
    case 'NONE': return null; 
    case 'DucTextElement': return accessor(new DucTextElement())! as DucTextElement;
    case 'DucLinearElement': return accessor(new DucLinearElement())! as DucLinearElement;
    case 'DucFreeDrawElement': return accessor(new DucFreeDrawElement())! as DucFreeDrawElement;
    case 'DucImageElement': return accessor(new DucImageElement())! as DucImageElement;
    case 'DucFrameElement': return accessor(new DucFrameElement())! as DucFrameElement;
    case 'DucGroupElement': return accessor(new DucGroupElement())! as DucGroupElement;
    case 'DucMagicFrameElement': return accessor(new DucMagicFrameElement())! as DucMagicFrameElement;
    case 'DucIframeElement': return accessor(new DucIframeElement())! as DucIframeElement;
    default: return null;
  }
}

export function unionListToDucElementUnion(
  type: DucElementUnion, 
  accessor: (index: number, obj:DucFrameElement|DucFreeDrawElement|DucGroupElement|DucIframeElement|DucImageElement|DucLinearElement|DucMagicFrameElement|DucTextElement) => DucFrameElement|DucFreeDrawElement|DucGroupElement|DucIframeElement|DucImageElement|DucLinearElement|DucMagicFrameElement|DucTextElement|null, 
  index: number
): DucFrameElement|DucFreeDrawElement|DucGroupElement|DucIframeElement|DucImageElement|DucLinearElement|DucMagicFrameElement|DucTextElement|null {
  switch(DucElementUnion[type]) {
    case 'NONE': return null; 
    case 'DucTextElement': return accessor(index, new DucTextElement())! as DucTextElement;
    case 'DucLinearElement': return accessor(index, new DucLinearElement())! as DucLinearElement;
    case 'DucFreeDrawElement': return accessor(index, new DucFreeDrawElement())! as DucFreeDrawElement;
    case 'DucImageElement': return accessor(index, new DucImageElement())! as DucImageElement;
    case 'DucFrameElement': return accessor(index, new DucFrameElement())! as DucFrameElement;
    case 'DucGroupElement': return accessor(index, new DucGroupElement())! as DucGroupElement;
    case 'DucMagicFrameElement': return accessor(index, new DucMagicFrameElement())! as DucMagicFrameElement;
    case 'DucIframeElement': return accessor(index, new DucIframeElement())! as DucIframeElement;
    default: return null;
  }
}

// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { DimensionExtLineStyle } from '../duc/dimension-ext-line-style';
import { DimensionFitStyle } from '../duc/dimension-fit-style';
import { DimensionLineStyle } from '../duc/dimension-line-style';
import { DimensionSymbolStyle } from '../duc/dimension-symbol-style';
import { DimensionToleranceStyle } from '../duc/dimension-tolerance-style';
import { DucTextStyle } from '../duc/duc-text-style';


export class DucDimensionStyle {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DucDimensionStyle {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDucDimensionStyle(bb:flatbuffers.ByteBuffer, obj?:DucDimensionStyle):DucDimensionStyle {
  return (obj || new DucDimensionStyle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDucDimensionStyle(bb:flatbuffers.ByteBuffer, obj?:DucDimensionStyle):DucDimensionStyle {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DucDimensionStyle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

dimLine(obj?:DimensionLineStyle):DimensionLineStyle|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new DimensionLineStyle()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

extLine(obj?:DimensionExtLineStyle):DimensionExtLineStyle|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new DimensionExtLineStyle()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

textStyle(obj?:DucTextStyle):DucTextStyle|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new DucTextStyle()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

symbols(obj?:DimensionSymbolStyle):DimensionSymbolStyle|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new DimensionSymbolStyle()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

tolerance(obj?:DimensionToleranceStyle):DimensionToleranceStyle|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new DimensionToleranceStyle()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

fit(obj?:DimensionFitStyle):DimensionFitStyle|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new DimensionFitStyle()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startDucDimensionStyle(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addDimLine(builder:flatbuffers.Builder, dimLineOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, dimLineOffset, 0);
}

static addExtLine(builder:flatbuffers.Builder, extLineOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, extLineOffset, 0);
}

static addTextStyle(builder:flatbuffers.Builder, textStyleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, textStyleOffset, 0);
}

static addSymbols(builder:flatbuffers.Builder, symbolsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, symbolsOffset, 0);
}

static addTolerance(builder:flatbuffers.Builder, toleranceOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, toleranceOffset, 0);
}

static addFit(builder:flatbuffers.Builder, fitOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, fitOffset, 0);
}

static endDucDimensionStyle(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}

// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { AlternateUnits } from '../duc/alternate-units';
import { PrimaryUnits } from '../duc/primary-units';


export class StandardUnits {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):StandardUnits {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsStandardUnits(bb:flatbuffers.ByteBuffer, obj?:StandardUnits):StandardUnits {
  return (obj || new StandardUnits()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsStandardUnits(bb:flatbuffers.ByteBuffer, obj?:StandardUnits):StandardUnits {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new StandardUnits()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

primaryUnits(obj?:PrimaryUnits):PrimaryUnits|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new PrimaryUnits()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

alternateUnits(obj?:AlternateUnits):AlternateUnits|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AlternateUnits()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startStandardUnits(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addPrimaryUnits(builder:flatbuffers.Builder, primaryUnitsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, primaryUnitsOffset, 0);
}

static addAlternateUnits(builder:flatbuffers.Builder, alternateUnitsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, alternateUnitsOffset, 0);
}

static endStandardUnits(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}

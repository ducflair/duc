// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { DucPointBinding } from '../duc/duc-point-binding';


export class DimensionBindings {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DimensionBindings {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDimensionBindings(bb:flatbuffers.ByteBuffer, obj?:DimensionBindings):DimensionBindings {
  return (obj || new DimensionBindings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDimensionBindings(bb:flatbuffers.ByteBuffer, obj?:DimensionBindings):DimensionBindings {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DimensionBindings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

origin1(obj?:DucPointBinding):DucPointBinding|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new DucPointBinding()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

origin2(obj?:DucPointBinding):DucPointBinding|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new DucPointBinding()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

center(obj?:DucPointBinding):DucPointBinding|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new DucPointBinding()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startDimensionBindings(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addOrigin1(builder:flatbuffers.Builder, origin1Offset:flatbuffers.Offset) {
  builder.addFieldOffset(0, origin1Offset, 0);
}

static addOrigin2(builder:flatbuffers.Builder, origin2Offset:flatbuffers.Offset) {
  builder.addFieldOffset(1, origin2Offset, 0);
}

static addCenter(builder:flatbuffers.Builder, centerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, centerOffset, 0);
}

static endDimensionBindings(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}

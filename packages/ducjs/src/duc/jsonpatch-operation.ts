// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class JSONPatchOperation {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):JSONPatchOperation {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsJSONPatchOperation(bb:flatbuffers.ByteBuffer, obj?:JSONPatchOperation):JSONPatchOperation {
  return (obj || new JSONPatchOperation()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsJSONPatchOperation(bb:flatbuffers.ByteBuffer, obj?:JSONPatchOperation):JSONPatchOperation {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new JSONPatchOperation()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

op():string|null
op(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
op(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

path():string|null
path(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
path(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

value():string|null
value(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
value(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startJSONPatchOperation(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addOp(builder:flatbuffers.Builder, opOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, opOffset, 0);
}

static addPath(builder:flatbuffers.Builder, pathOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, pathOffset, 0);
}

static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, valueOffset, 0);
}

static endJSONPatchOperation(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createJSONPatchOperation(builder:flatbuffers.Builder, opOffset:flatbuffers.Offset, pathOffset:flatbuffers.Offset, valueOffset:flatbuffers.Offset):flatbuffers.Offset {
  JSONPatchOperation.startJSONPatchOperation(builder);
  JSONPatchOperation.addOp(builder, opOffset);
  JSONPatchOperation.addPath(builder, pathOffset);
  JSONPatchOperation.addValue(builder, valueOffset);
  return JSONPatchOperation.endJSONPatchOperation(builder);
}
}

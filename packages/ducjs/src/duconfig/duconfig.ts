// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ANTI_ALIASING } from '../duconfig/anti-aliasing';
import { PRUNING_LEVEL } from '../duconfig/pruning-level';
import { SHOW_HYPERLINK_POPUP } from '../duconfig/show-hyperlink-popup';
import { THEME } from '../duconfig/theme';


/**
 * User's personal application settings, applied across all projects
 */
export class Duconfig {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Duconfig {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDuconfig(bb:flatbuffers.ByteBuffer, obj?:Duconfig):Duconfig {
  return (obj || new Duconfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDuconfig(bb:flatbuffers.ByteBuffer, obj?:Duconfig):Duconfig {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Duconfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static bufferHasIdentifier(bb:flatbuffers.ByteBuffer):boolean {
  return bb.__has_identifier('DFIG');
}

theme():THEME {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : THEME.LIGHT;
}

antiAliasing():ANTI_ALIASING {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ANTI_ALIASING.ANALYTIC;
}

showHyperlinkPopup():SHOW_HYPERLINK_POPUP {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : SHOW_HYPERLINK_POPUP.INFO;
}

zoomStep():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

vSync():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

scaleRatioLocked():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

displayAllPointDistances():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

displayDistanceOnDrawing():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

displayAllPointCoordinates():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

displayAllPointInfoSelected():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

displayRootAxis():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

debugRendering():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

manualSaveMode():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

defaultVersionGraphPruningLevel():PRUNING_LEVEL {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : PRUNING_LEVEL.BALANCED;
}

static startDuconfig(builder:flatbuffers.Builder) {
  builder.startObject(14);
}

static addTheme(builder:flatbuffers.Builder, theme:THEME) {
  builder.addFieldInt8(0, theme, THEME.LIGHT);
}

static addAntiAliasing(builder:flatbuffers.Builder, antiAliasing:ANTI_ALIASING) {
  builder.addFieldInt8(1, antiAliasing, ANTI_ALIASING.ANALYTIC);
}

static addShowHyperlinkPopup(builder:flatbuffers.Builder, showHyperlinkPopup:SHOW_HYPERLINK_POPUP) {
  builder.addFieldInt8(2, showHyperlinkPopup, SHOW_HYPERLINK_POPUP.INFO);
}

static addZoomStep(builder:flatbuffers.Builder, zoomStep:number) {
  builder.addFieldFloat32(3, zoomStep, 0.0);
}

static addVSync(builder:flatbuffers.Builder, vSync:boolean) {
  builder.addFieldInt8(4, +vSync, +false);
}

static addScaleRatioLocked(builder:flatbuffers.Builder, scaleRatioLocked:boolean) {
  builder.addFieldInt8(5, +scaleRatioLocked, +false);
}

static addDisplayAllPointDistances(builder:flatbuffers.Builder, displayAllPointDistances:boolean) {
  builder.addFieldInt8(6, +displayAllPointDistances, +false);
}

static addDisplayDistanceOnDrawing(builder:flatbuffers.Builder, displayDistanceOnDrawing:boolean) {
  builder.addFieldInt8(7, +displayDistanceOnDrawing, +false);
}

static addDisplayAllPointCoordinates(builder:flatbuffers.Builder, displayAllPointCoordinates:boolean) {
  builder.addFieldInt8(8, +displayAllPointCoordinates, +false);
}

static addDisplayAllPointInfoSelected(builder:flatbuffers.Builder, displayAllPointInfoSelected:boolean) {
  builder.addFieldInt8(9, +displayAllPointInfoSelected, +false);
}

static addDisplayRootAxis(builder:flatbuffers.Builder, displayRootAxis:boolean) {
  builder.addFieldInt8(10, +displayRootAxis, +false);
}

static addDebugRendering(builder:flatbuffers.Builder, debugRendering:boolean) {
  builder.addFieldInt8(11, +debugRendering, +false);
}

static addManualSaveMode(builder:flatbuffers.Builder, manualSaveMode:boolean) {
  builder.addFieldInt8(12, +manualSaveMode, +false);
}

static addDefaultVersionGraphPruningLevel(builder:flatbuffers.Builder, defaultVersionGraphPruningLevel:PRUNING_LEVEL) {
  builder.addFieldInt8(13, defaultVersionGraphPruningLevel, PRUNING_LEVEL.BALANCED);
}

static endDuconfig(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishDuconfigBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'DFIG');
}

static finishSizePrefixedDuconfigBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'DFIG', true);
}

static createDuconfig(builder:flatbuffers.Builder, theme:THEME, antiAliasing:ANTI_ALIASING, showHyperlinkPopup:SHOW_HYPERLINK_POPUP, zoomStep:number, vSync:boolean, scaleRatioLocked:boolean, displayAllPointDistances:boolean, displayDistanceOnDrawing:boolean, displayAllPointCoordinates:boolean, displayAllPointInfoSelected:boolean, displayRootAxis:boolean, debugRendering:boolean, manualSaveMode:boolean, defaultVersionGraphPruningLevel:PRUNING_LEVEL):flatbuffers.Offset {
  Duconfig.startDuconfig(builder);
  Duconfig.addTheme(builder, theme);
  Duconfig.addAntiAliasing(builder, antiAliasing);
  Duconfig.addShowHyperlinkPopup(builder, showHyperlinkPopup);
  Duconfig.addZoomStep(builder, zoomStep);
  Duconfig.addVSync(builder, vSync);
  Duconfig.addScaleRatioLocked(builder, scaleRatioLocked);
  Duconfig.addDisplayAllPointDistances(builder, displayAllPointDistances);
  Duconfig.addDisplayDistanceOnDrawing(builder, displayDistanceOnDrawing);
  Duconfig.addDisplayAllPointCoordinates(builder, displayAllPointCoordinates);
  Duconfig.addDisplayAllPointInfoSelected(builder, displayAllPointInfoSelected);
  Duconfig.addDisplayRootAxis(builder, displayRootAxis);
  Duconfig.addDebugRendering(builder, debugRendering);
  Duconfig.addManualSaveMode(builder, manualSaveMode);
  Duconfig.addDefaultVersionGraphPruningLevel(builder, defaultVersionGraphPruningLevel);
  return Duconfig.endDuconfig(builder);
}
}

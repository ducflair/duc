// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ElementContentBase } from '../duc/element-content-base';
import { StrokeSides } from '../duc/stroke-sides';
import { StrokeStyle } from '../duc/stroke-style';


export class ElementStroke {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ElementStroke {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsElementStroke(bb:flatbuffers.ByteBuffer, obj?:ElementStroke):ElementStroke {
  return (obj || new ElementStroke()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsElementStroke(bb:flatbuffers.ByteBuffer, obj?:ElementStroke):ElementStroke {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ElementStroke()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

content(obj?:ElementContentBase):ElementContentBase|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ElementContentBase()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

width():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

style(obj?:StrokeStyle):StrokeStyle|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new StrokeStyle()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

placement():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
}

strokeSides(obj?:StrokeSides):StrokeSides|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new StrokeSides()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startElementStroke(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addContent(builder:flatbuffers.Builder, contentOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, contentOffset, 0);
}

static addWidth(builder:flatbuffers.Builder, width:number) {
  builder.addFieldFloat64(1, width, 0.0);
}

static addStyle(builder:flatbuffers.Builder, styleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, styleOffset, 0);
}

static addPlacement(builder:flatbuffers.Builder, placement:number) {
  builder.addFieldInt8(3, placement, 0);
}

static addStrokeSides(builder:flatbuffers.Builder, strokeSidesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, strokeSidesOffset, 0);
}

static endElementStroke(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}

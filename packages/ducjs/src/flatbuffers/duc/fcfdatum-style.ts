// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { DATUM_BRACKET_STYLE } from '../duc/datum-bracket-style';


export class FCFDatumStyle {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FCFDatumStyle {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFCFDatumStyle(bb:flatbuffers.ByteBuffer, obj?:FCFDatumStyle):FCFDatumStyle {
  return (obj || new FCFDatumStyle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFCFDatumStyle(bb:flatbuffers.ByteBuffer, obj?:FCFDatumStyle):FCFDatumStyle {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FCFDatumStyle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

bracketStyle():DATUM_BRACKET_STYLE|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : null;
}

static startFCFDatumStyle(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addBracketStyle(builder:flatbuffers.Builder, bracketStyle:DATUM_BRACKET_STYLE) {
  builder.addFieldInt8(0, bracketStyle, null);
}

static endFCFDatumStyle(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createFCFDatumStyle(builder:flatbuffers.Builder, bracketStyle:DATUM_BRACKET_STYLE|null):flatbuffers.Offset {
  FCFDatumStyle.startFCFDatumStyle(builder);
  if (bracketStyle !== null)
    FCFDatumStyle.addBracketStyle(builder, bracketStyle);
  return FCFDatumStyle.endFCFDatumStyle(builder);
}
}

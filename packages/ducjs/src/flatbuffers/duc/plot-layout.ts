// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { Margins } from '../duc/margins';


export class PlotLayout {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PlotLayout {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPlotLayout(bb:flatbuffers.ByteBuffer, obj?:PlotLayout):PlotLayout {
  return (obj || new PlotLayout()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPlotLayout(bb:flatbuffers.ByteBuffer, obj?:PlotLayout):PlotLayout {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PlotLayout()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

margins(obj?:Margins):Margins|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Margins()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startPlotLayout(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addMargins(builder:flatbuffers.Builder, marginsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, marginsOffset, 0);
}

static endPlotLayout(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPlotLayout(builder:flatbuffers.Builder, marginsOffset:flatbuffers.Offset):flatbuffers.Offset {
  PlotLayout.startPlotLayout(builder);
  PlotLayout.addMargins(builder, marginsOffset);
  return PlotLayout.endPlotLayout(builder);
}
}

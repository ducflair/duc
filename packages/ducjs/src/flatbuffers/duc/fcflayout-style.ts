// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class FCFLayoutStyle {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FCFLayoutStyle {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFCFLayoutStyle(bb:flatbuffers.ByteBuffer, obj?:FCFLayoutStyle):FCFLayoutStyle {
  return (obj || new FCFLayoutStyle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFCFLayoutStyle(bb:flatbuffers.ByteBuffer, obj?:FCFLayoutStyle):FCFLayoutStyle {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FCFLayoutStyle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

padding():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

segmentSpacing():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

rowSpacing():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

static startFCFLayoutStyle(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addPadding(builder:flatbuffers.Builder, padding:number) {
  builder.addFieldFloat64(0, padding, 0.0);
}

static addSegmentSpacing(builder:flatbuffers.Builder, segmentSpacing:number) {
  builder.addFieldFloat64(1, segmentSpacing, 0.0);
}

static addRowSpacing(builder:flatbuffers.Builder, rowSpacing:number) {
  builder.addFieldFloat64(2, rowSpacing, 0.0);
}

static endFCFLayoutStyle(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createFCFLayoutStyle(builder:flatbuffers.Builder, padding:number, segmentSpacing:number, rowSpacing:number):flatbuffers.Offset {
  FCFLayoutStyle.startFCFLayoutStyle(builder);
  FCFLayoutStyle.addPadding(builder, padding);
  FCFLayoutStyle.addSegmentSpacing(builder, segmentSpacing);
  FCFLayoutStyle.addRowSpacing(builder, rowSpacing);
  return FCFLayoutStyle.endFCFLayoutStyle(builder);
}
}

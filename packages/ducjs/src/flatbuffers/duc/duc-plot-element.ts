// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { DucPlotStyle } from '../duc/duc-plot-style';
import { PlotLayout } from '../duc/plot-layout';
import { _DucStackElementBase } from '../duc/duc-stack-element-base';


export class DucPlotElement {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DucPlotElement {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDucPlotElement(bb:flatbuffers.ByteBuffer, obj?:DucPlotElement):DucPlotElement {
  return (obj || new DucPlotElement()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDucPlotElement(bb:flatbuffers.ByteBuffer, obj?:DucPlotElement):DucPlotElement {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DucPlotElement()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

stackElementBase(obj?:_DucStackElementBase):_DucStackElementBase|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new _DucStackElementBase()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

style(obj?:DucPlotStyle):DucPlotStyle|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new DucPlotStyle()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

layout(obj?:PlotLayout):PlotLayout|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new PlotLayout()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startDucPlotElement(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addStackElementBase(builder:flatbuffers.Builder, stackElementBaseOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, stackElementBaseOffset, 0);
}

static addStyle(builder:flatbuffers.Builder, styleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, styleOffset, 0);
}

static addLayout(builder:flatbuffers.Builder, layoutOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, layoutOffset, 0);
}

static endDucPlotElement(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}

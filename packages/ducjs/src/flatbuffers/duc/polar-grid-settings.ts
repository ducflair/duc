// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class PolarGridSettings {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PolarGridSettings {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPolarGridSettings(bb:flatbuffers.ByteBuffer, obj?:PolarGridSettings):PolarGridSettings {
  return (obj || new PolarGridSettings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPolarGridSettings(bb:flatbuffers.ByteBuffer, obj?:PolarGridSettings):PolarGridSettings {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PolarGridSettings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

radialDivisions():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

radialSpacing():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

showLabels():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startPolarGridSettings(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addRadialDivisions(builder:flatbuffers.Builder, radialDivisions:number) {
  builder.addFieldInt32(0, radialDivisions, 0);
}

static addRadialSpacing(builder:flatbuffers.Builder, radialSpacing:number) {
  builder.addFieldFloat64(1, radialSpacing, 0.0);
}

static addShowLabels(builder:flatbuffers.Builder, showLabels:boolean) {
  builder.addFieldInt8(2, +showLabels, +false);
}

static endPolarGridSettings(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPolarGridSettings(builder:flatbuffers.Builder, radialDivisions:number, radialSpacing:number, showLabels:boolean):flatbuffers.Offset {
  PolarGridSettings.startPolarGridSettings(builder);
  PolarGridSettings.addRadialDivisions(builder, radialDivisions);
  PolarGridSettings.addRadialSpacing(builder, radialSpacing);
  PolarGridSettings.addShowLabels(builder, showLabels);
  return PolarGridSettings.endPolarGridSettings(builder);
}
}

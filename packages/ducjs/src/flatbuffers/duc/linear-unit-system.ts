// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { DECIMAL_SEPARATOR } from '../duc/decimal-separator';
import { DIMENSION_UNITS_FORMAT } from '../duc/dimension-units-format';
import { _UnitSystemBase } from '../duc/unit-system-base';


export class LinearUnitSystem {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LinearUnitSystem {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLinearUnitSystem(bb:flatbuffers.ByteBuffer, obj?:LinearUnitSystem):LinearUnitSystem {
  return (obj || new LinearUnitSystem()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLinearUnitSystem(bb:flatbuffers.ByteBuffer, obj?:LinearUnitSystem):LinearUnitSystem {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LinearUnitSystem()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

base(obj?:_UnitSystemBase):_UnitSystemBase|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new _UnitSystemBase()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

format():DIMENSION_UNITS_FORMAT|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : null;
}

decimalSeparator():DECIMAL_SEPARATOR|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : null;
}

suppressZeroFeet():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

suppressZeroInches():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startLinearUnitSystem(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addBase(builder:flatbuffers.Builder, baseOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, baseOffset, 0);
}

static addFormat(builder:flatbuffers.Builder, format:DIMENSION_UNITS_FORMAT) {
  builder.addFieldInt8(1, format, null);
}

static addDecimalSeparator(builder:flatbuffers.Builder, decimalSeparator:DECIMAL_SEPARATOR) {
  builder.addFieldInt8(2, decimalSeparator, null);
}

static addSuppressZeroFeet(builder:flatbuffers.Builder, suppressZeroFeet:boolean) {
  builder.addFieldInt8(3, +suppressZeroFeet, +false);
}

static addSuppressZeroInches(builder:flatbuffers.Builder, suppressZeroInches:boolean) {
  builder.addFieldInt8(4, +suppressZeroInches, +false);
}

static endLinearUnitSystem(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLinearUnitSystem(builder:flatbuffers.Builder, baseOffset:flatbuffers.Offset, format:DIMENSION_UNITS_FORMAT|null, decimalSeparator:DECIMAL_SEPARATOR|null, suppressZeroFeet:boolean, suppressZeroInches:boolean):flatbuffers.Offset {
  LinearUnitSystem.startLinearUnitSystem(builder);
  LinearUnitSystem.addBase(builder, baseOffset);
  if (format !== null)
    LinearUnitSystem.addFormat(builder, format);
  if (decimalSeparator !== null)
    LinearUnitSystem.addDecimalSeparator(builder, decimalSeparator);
  LinearUnitSystem.addSuppressZeroFeet(builder, suppressZeroFeet);
  LinearUnitSystem.addSuppressZeroInches(builder, suppressZeroInches);
  return LinearUnitSystem.endLinearUnitSystem(builder);
}
}

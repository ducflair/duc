// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { AngularUnitSystem } from '../duc/angular-unit-system';
import { LinearUnitSystem } from '../duc/linear-unit-system';


export class PrimaryUnits {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PrimaryUnits {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPrimaryUnits(bb:flatbuffers.ByteBuffer, obj?:PrimaryUnits):PrimaryUnits {
  return (obj || new PrimaryUnits()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPrimaryUnits(bb:flatbuffers.ByteBuffer, obj?:PrimaryUnits):PrimaryUnits {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PrimaryUnits()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

linear(obj?:LinearUnitSystem):LinearUnitSystem|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new LinearUnitSystem()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

angular(obj?:AngularUnitSystem):AngularUnitSystem|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AngularUnitSystem()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startPrimaryUnits(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addLinear(builder:flatbuffers.Builder, linearOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, linearOffset, 0);
}

static addAngular(builder:flatbuffers.Builder, angularOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, angularOffset, 0);
}

static endPrimaryUnits(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}

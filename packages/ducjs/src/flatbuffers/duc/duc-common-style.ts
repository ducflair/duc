// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ElementBackground } from '../duc/element-background';
import { ElementStroke } from '../duc/element-stroke';


export class DucCommonStyle {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DucCommonStyle {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDucCommonStyle(bb:flatbuffers.ByteBuffer, obj?:DucCommonStyle):DucCommonStyle {
  return (obj || new DucCommonStyle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDucCommonStyle(bb:flatbuffers.ByteBuffer, obj?:DucCommonStyle):DucCommonStyle {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DucCommonStyle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

background(obj?:ElementBackground):ElementBackground|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ElementBackground()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

stroke(obj?:ElementStroke):ElementStroke|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new ElementStroke()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startDucCommonStyle(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addBackground(builder:flatbuffers.Builder, backgroundOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, backgroundOffset, 0);
}

static addStroke(builder:flatbuffers.Builder, strokeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, strokeOffset, 0);
}

static endDucCommonStyle(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}

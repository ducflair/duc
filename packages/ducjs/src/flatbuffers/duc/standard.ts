// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { Identifier } from '../duc/identifier';
import { StandardOverrides } from '../duc/standard-overrides';
import { StandardStyles } from '../duc/standard-styles';
import { StandardUnits } from '../duc/standard-units';
import { StandardValidation } from '../duc/standard-validation';
import { StandardViewSettings } from '../duc/standard-view-settings';


export class Standard {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Standard {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsStandard(bb:flatbuffers.ByteBuffer, obj?:Standard):Standard {
  return (obj || new Standard()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsStandard(bb:flatbuffers.ByteBuffer, obj?:Standard):Standard {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Standard()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

identifier(obj?:Identifier):Identifier|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Identifier()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

version():string|null
version(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
version(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

readonly():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

overrides(obj?:StandardOverrides):StandardOverrides|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new StandardOverrides()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

styles(obj?:StandardStyles):StandardStyles|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new StandardStyles()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

viewSettings(obj?:StandardViewSettings):StandardViewSettings|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new StandardViewSettings()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

units(obj?:StandardUnits):StandardUnits|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new StandardUnits()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

validation(obj?:StandardValidation):StandardValidation|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new StandardValidation()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startStandard(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addIdentifier(builder:flatbuffers.Builder, identifierOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, identifierOffset, 0);
}

static addVersion(builder:flatbuffers.Builder, versionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, versionOffset, 0);
}

static addReadonly(builder:flatbuffers.Builder, readonly:boolean) {
  builder.addFieldInt8(2, +readonly, +false);
}

static addOverrides(builder:flatbuffers.Builder, overridesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, overridesOffset, 0);
}

static addStyles(builder:flatbuffers.Builder, stylesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, stylesOffset, 0);
}

static addViewSettings(builder:flatbuffers.Builder, viewSettingsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, viewSettingsOffset, 0);
}

static addUnits(builder:flatbuffers.Builder, unitsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, unitsOffset, 0);
}

static addValidation(builder:flatbuffers.Builder, validationOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, validationOffset, 0);
}

static endStandard(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}

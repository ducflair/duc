# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class AppState(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AppState()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAppState(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # AppState
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # AppState
    def FrameRenderingEnabled(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # AppState
    def FrameRenderingName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # AppState
    def FrameRenderingOutline(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # AppState
    def FrameRenderingClip(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # AppState
    def CurrentItemOpacity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # AppState
    def ViewBackgroundColor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(60))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # AppState
    def Scope(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(62))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # AppState
    def Groups(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from Duc.DucGroup import DucGroup
            obj = DucGroup()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # AppState
    def GroupsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # AppState
    def GroupsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        return o == 0

    # AppState
    def ScrollX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(68))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # AppState
    def ScrollY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # AppState
    def CursorButton(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # AppState
    def ScrolledOutside(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(74))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # AppState
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(76))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # AppState
    def Zoom(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(78))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # AppState
    def LastPointerDownWith(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(80))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # AppState
    def SelectedElementIds(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(82))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # AppState
    def SelectedElementIdsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(82))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # AppState
    def SelectedElementIdsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(82))
        return o == 0

    # AppState
    def GridSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(90))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # AppState
    def ScaleRatioLocked(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(100))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # AppState
    def DisplayAllPointDistances(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(102))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # AppState
    def DisplayDistanceOnDrawing(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(104))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # AppState
    def DisplayAllPointCoordinates(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(106))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # AppState
    def DisplayAllPointInfoSelected(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(108))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # AppState
    def DisplayRootAxis(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(110))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # AppState
    def CurrentItemTextAlignV3(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(122))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # AppState
    def LineBendingMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(124))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # AppState
    def CurrentItemFontSizeV3(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(130))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # AppState
    def CoordDecimalPlacesV3(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(132))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # AppState
    def CurrentItemStroke(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(134))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Duc.ElementStroke import ElementStroke
            obj = ElementStroke()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # AppState
    def CurrentItemBackground(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(136))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Duc.ElementBackground import ElementBackground
            obj = ElementBackground()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # AppState
    def MainScope(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(138))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # AppState
    def Standard(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(140))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # AppState
    def CurrentItemStartLineHead(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(142))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return None

    # AppState
    def CurrentItemEndLineHead(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(144))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return None

    # AppState
    def CurrentItemRoundnessV3(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(146))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # AppState
    def AntiAliasing(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(148))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # AppState
    def VSync(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(150))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # AppState
    def CurrentItemFontFamilyV2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(152))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # AppState
    def DebugRendering(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(154))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # AppState
    def CurrentItemSubset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(156))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return None

    # AppState
    def EditingLinearElement(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(158))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Duc.LinearElementEditor import LinearElementEditor
            obj = LinearElementEditor()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # AppState
    def GridModeEnabled(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(160))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # AppState
    def GridStep(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(162))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def AppStateStart(builder):
    builder.StartObject(80)

def Start(builder):
    AppStateStart(builder)

def AppStateAddFrameRenderingEnabled(builder, frameRenderingEnabled):
    builder.PrependBoolSlot(7, frameRenderingEnabled, 0)

def AddFrameRenderingEnabled(builder, frameRenderingEnabled):
    AppStateAddFrameRenderingEnabled(builder, frameRenderingEnabled)

def AppStateAddFrameRenderingName(builder, frameRenderingName):
    builder.PrependBoolSlot(8, frameRenderingName, 0)

def AddFrameRenderingName(builder, frameRenderingName):
    AppStateAddFrameRenderingName(builder, frameRenderingName)

def AppStateAddFrameRenderingOutline(builder, frameRenderingOutline):
    builder.PrependBoolSlot(9, frameRenderingOutline, 0)

def AddFrameRenderingOutline(builder, frameRenderingOutline):
    AppStateAddFrameRenderingOutline(builder, frameRenderingOutline)

def AppStateAddFrameRenderingClip(builder, frameRenderingClip):
    builder.PrependBoolSlot(10, frameRenderingClip, 0)

def AddFrameRenderingClip(builder, frameRenderingClip):
    AppStateAddFrameRenderingClip(builder, frameRenderingClip)

def AppStateAddCurrentItemOpacity(builder, currentItemOpacity):
    builder.PrependFloat32Slot(21, currentItemOpacity, 0.0)

def AddCurrentItemOpacity(builder, currentItemOpacity):
    AppStateAddCurrentItemOpacity(builder, currentItemOpacity)

def AppStateAddViewBackgroundColor(builder, viewBackgroundColor):
    builder.PrependUOffsetTRelativeSlot(28, flatbuffers.number_types.UOffsetTFlags.py_type(viewBackgroundColor), 0)

def AddViewBackgroundColor(builder, viewBackgroundColor):
    AppStateAddViewBackgroundColor(builder, viewBackgroundColor)

def AppStateAddScope(builder, scope):
    builder.PrependUOffsetTRelativeSlot(29, flatbuffers.number_types.UOffsetTFlags.py_type(scope), 0)

def AddScope(builder, scope):
    AppStateAddScope(builder, scope)

def AppStateAddGroups(builder, groups):
    builder.PrependUOffsetTRelativeSlot(31, flatbuffers.number_types.UOffsetTFlags.py_type(groups), 0)

def AddGroups(builder, groups):
    AppStateAddGroups(builder, groups)

def AppStateStartGroupsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartGroupsVector(builder, numElems):
    return AppStateStartGroupsVector(builder, numElems)

def AppStateAddScrollX(builder, scrollX):
    builder.PrependFloat32Slot(32, scrollX, 0.0)

def AddScrollX(builder, scrollX):
    AppStateAddScrollX(builder, scrollX)

def AppStateAddScrollY(builder, scrollY):
    builder.PrependFloat32Slot(33, scrollY, 0.0)

def AddScrollY(builder, scrollY):
    AppStateAddScrollY(builder, scrollY)

def AppStateAddCursorButton(builder, cursorButton):
    builder.PrependUOffsetTRelativeSlot(34, flatbuffers.number_types.UOffsetTFlags.py_type(cursorButton), 0)

def AddCursorButton(builder, cursorButton):
    AppStateAddCursorButton(builder, cursorButton)

def AppStateAddScrolledOutside(builder, scrolledOutside):
    builder.PrependBoolSlot(35, scrolledOutside, 0)

def AddScrolledOutside(builder, scrolledOutside):
    AppStateAddScrolledOutside(builder, scrolledOutside)

def AppStateAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(36, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def AddName(builder, name):
    AppStateAddName(builder, name)

def AppStateAddZoom(builder, zoom):
    builder.PrependFloat32Slot(37, zoom, 0.0)

def AddZoom(builder, zoom):
    AppStateAddZoom(builder, zoom)

def AppStateAddLastPointerDownWith(builder, lastPointerDownWith):
    builder.PrependUOffsetTRelativeSlot(38, flatbuffers.number_types.UOffsetTFlags.py_type(lastPointerDownWith), 0)

def AddLastPointerDownWith(builder, lastPointerDownWith):
    AppStateAddLastPointerDownWith(builder, lastPointerDownWith)

def AppStateAddSelectedElementIds(builder, selectedElementIds):
    builder.PrependUOffsetTRelativeSlot(39, flatbuffers.number_types.UOffsetTFlags.py_type(selectedElementIds), 0)

def AddSelectedElementIds(builder, selectedElementIds):
    AppStateAddSelectedElementIds(builder, selectedElementIds)

def AppStateStartSelectedElementIdsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartSelectedElementIdsVector(builder, numElems):
    return AppStateStartSelectedElementIdsVector(builder, numElems)

def AppStateAddGridSize(builder, gridSize):
    builder.PrependInt32Slot(43, gridSize, 0)

def AddGridSize(builder, gridSize):
    AppStateAddGridSize(builder, gridSize)

def AppStateAddScaleRatioLocked(builder, scaleRatioLocked):
    builder.PrependBoolSlot(48, scaleRatioLocked, 0)

def AddScaleRatioLocked(builder, scaleRatioLocked):
    AppStateAddScaleRatioLocked(builder, scaleRatioLocked)

def AppStateAddDisplayAllPointDistances(builder, displayAllPointDistances):
    builder.PrependBoolSlot(49, displayAllPointDistances, 0)

def AddDisplayAllPointDistances(builder, displayAllPointDistances):
    AppStateAddDisplayAllPointDistances(builder, displayAllPointDistances)

def AppStateAddDisplayDistanceOnDrawing(builder, displayDistanceOnDrawing):
    builder.PrependBoolSlot(50, displayDistanceOnDrawing, 0)

def AddDisplayDistanceOnDrawing(builder, displayDistanceOnDrawing):
    AppStateAddDisplayDistanceOnDrawing(builder, displayDistanceOnDrawing)

def AppStateAddDisplayAllPointCoordinates(builder, displayAllPointCoordinates):
    builder.PrependBoolSlot(51, displayAllPointCoordinates, 0)

def AddDisplayAllPointCoordinates(builder, displayAllPointCoordinates):
    AppStateAddDisplayAllPointCoordinates(builder, displayAllPointCoordinates)

def AppStateAddDisplayAllPointInfoSelected(builder, displayAllPointInfoSelected):
    builder.PrependBoolSlot(52, displayAllPointInfoSelected, 0)

def AddDisplayAllPointInfoSelected(builder, displayAllPointInfoSelected):
    AppStateAddDisplayAllPointInfoSelected(builder, displayAllPointInfoSelected)

def AppStateAddDisplayRootAxis(builder, displayRootAxis):
    builder.PrependBoolSlot(53, displayRootAxis, 0)

def AddDisplayRootAxis(builder, displayRootAxis):
    AppStateAddDisplayRootAxis(builder, displayRootAxis)

def AppStateAddCurrentItemTextAlignV3(builder, currentItemTextAlignV3):
    builder.PrependInt8Slot(59, currentItemTextAlignV3, 0)

def AddCurrentItemTextAlignV3(builder, currentItemTextAlignV3):
    AppStateAddCurrentItemTextAlignV3(builder, currentItemTextAlignV3)

def AppStateAddLineBendingMode(builder, lineBendingMode):
    builder.PrependBoolSlot(60, lineBendingMode, 0)

def AddLineBendingMode(builder, lineBendingMode):
    AppStateAddLineBendingMode(builder, lineBendingMode)

def AppStateAddCurrentItemFontSizeV3(builder, currentItemFontSizeV3):
    builder.PrependFloat64Slot(63, currentItemFontSizeV3, 0.0)

def AddCurrentItemFontSizeV3(builder, currentItemFontSizeV3):
    AppStateAddCurrentItemFontSizeV3(builder, currentItemFontSizeV3)

def AppStateAddCoordDecimalPlacesV3(builder, coordDecimalPlacesV3):
    builder.PrependInt8Slot(64, coordDecimalPlacesV3, 0)

def AddCoordDecimalPlacesV3(builder, coordDecimalPlacesV3):
    AppStateAddCoordDecimalPlacesV3(builder, coordDecimalPlacesV3)

def AppStateAddCurrentItemStroke(builder, currentItemStroke):
    builder.PrependUOffsetTRelativeSlot(65, flatbuffers.number_types.UOffsetTFlags.py_type(currentItemStroke), 0)

def AddCurrentItemStroke(builder, currentItemStroke):
    AppStateAddCurrentItemStroke(builder, currentItemStroke)

def AppStateAddCurrentItemBackground(builder, currentItemBackground):
    builder.PrependUOffsetTRelativeSlot(66, flatbuffers.number_types.UOffsetTFlags.py_type(currentItemBackground), 0)

def AddCurrentItemBackground(builder, currentItemBackground):
    AppStateAddCurrentItemBackground(builder, currentItemBackground)

def AppStateAddMainScope(builder, mainScope):
    builder.PrependUOffsetTRelativeSlot(67, flatbuffers.number_types.UOffsetTFlags.py_type(mainScope), 0)

def AddMainScope(builder, mainScope):
    AppStateAddMainScope(builder, mainScope)

def AppStateAddStandard(builder, standard):
    builder.PrependInt8Slot(68, standard, 0)

def AddStandard(builder, standard):
    AppStateAddStandard(builder, standard)

def AppStateAddCurrentItemStartLineHead(builder, currentItemStartLineHead):
    builder.PrependInt8Slot(69, currentItemStartLineHead, None)

def AddCurrentItemStartLineHead(builder, currentItemStartLineHead):
    AppStateAddCurrentItemStartLineHead(builder, currentItemStartLineHead)

def AppStateAddCurrentItemEndLineHead(builder, currentItemEndLineHead):
    builder.PrependInt8Slot(70, currentItemEndLineHead, None)

def AddCurrentItemEndLineHead(builder, currentItemEndLineHead):
    AppStateAddCurrentItemEndLineHead(builder, currentItemEndLineHead)

def AppStateAddCurrentItemRoundnessV3(builder, currentItemRoundnessV3):
    builder.PrependFloat64Slot(71, currentItemRoundnessV3, 0.0)

def AddCurrentItemRoundnessV3(builder, currentItemRoundnessV3):
    AppStateAddCurrentItemRoundnessV3(builder, currentItemRoundnessV3)

def AppStateAddAntiAliasing(builder, antiAliasing):
    builder.PrependInt8Slot(72, antiAliasing, 0)

def AddAntiAliasing(builder, antiAliasing):
    AppStateAddAntiAliasing(builder, antiAliasing)

def AppStateAddVSync(builder, vSync):
    builder.PrependBoolSlot(73, vSync, 0)

def AddVSync(builder, vSync):
    AppStateAddVSync(builder, vSync)

def AppStateAddCurrentItemFontFamilyV2(builder, currentItemFontFamilyV2):
    builder.PrependUOffsetTRelativeSlot(74, flatbuffers.number_types.UOffsetTFlags.py_type(currentItemFontFamilyV2), 0)

def AddCurrentItemFontFamilyV2(builder, currentItemFontFamilyV2):
    AppStateAddCurrentItemFontFamilyV2(builder, currentItemFontFamilyV2)

def AppStateAddDebugRendering(builder, debugRendering):
    builder.PrependBoolSlot(75, debugRendering, 0)

def AddDebugRendering(builder, debugRendering):
    AppStateAddDebugRendering(builder, debugRendering)

def AppStateAddCurrentItemSubset(builder, currentItemSubset):
    builder.PrependInt8Slot(76, currentItemSubset, None)

def AddCurrentItemSubset(builder, currentItemSubset):
    AppStateAddCurrentItemSubset(builder, currentItemSubset)

def AppStateAddEditingLinearElement(builder, editingLinearElement):
    builder.PrependUOffsetTRelativeSlot(77, flatbuffers.number_types.UOffsetTFlags.py_type(editingLinearElement), 0)

def AddEditingLinearElement(builder, editingLinearElement):
    AppStateAddEditingLinearElement(builder, editingLinearElement)

def AppStateAddGridModeEnabled(builder, gridModeEnabled):
    builder.PrependBoolSlot(78, gridModeEnabled, 0)

def AddGridModeEnabled(builder, gridModeEnabled):
    AppStateAddGridModeEnabled(builder, gridModeEnabled)

def AppStateAddGridStep(builder, gridStep):
    builder.PrependInt32Slot(79, gridStep, 0)

def AddGridStep(builder, gridStep):
    AppStateAddGridStep(builder, gridStep)

def AppStateEnd(builder):
    return builder.EndObject()

def End(builder):
    return AppStateEnd(builder)

# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ElementContentBase(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ElementContentBase()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsElementContentBase(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ElementContentBase
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ElementContentBase
    def Preference(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # ElementContentBase
    def Src(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ElementContentBase
    def Visible(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ElementContentBase
    def Opacity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # ElementContentBase
    def Tiling(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Duc.TilingProperties import TilingProperties
            obj = TilingProperties()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def ElementContentBaseStart(builder):
    builder.StartObject(5)

def Start(builder):
    ElementContentBaseStart(builder)

def ElementContentBaseAddPreference(builder, preference):
    builder.PrependInt8Slot(0, preference, 0)

def AddPreference(builder, preference):
    ElementContentBaseAddPreference(builder, preference)

def ElementContentBaseAddSrc(builder, src):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(src), 0)

def AddSrc(builder, src):
    ElementContentBaseAddSrc(builder, src)

def ElementContentBaseAddVisible(builder, visible):
    builder.PrependBoolSlot(2, visible, 0)

def AddVisible(builder, visible):
    ElementContentBaseAddVisible(builder, visible)

def ElementContentBaseAddOpacity(builder, opacity):
    builder.PrependFloat64Slot(3, opacity, 0.0)

def AddOpacity(builder, opacity):
    ElementContentBaseAddOpacity(builder, opacity)

def ElementContentBaseAddTiling(builder, tiling):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(tiling), 0)

def AddTiling(builder, tiling):
    ElementContentBaseAddTiling(builder, tiling)

def ElementContentBaseEnd(builder):
    return builder.EndObject()

def End(builder):
    return ElementContentBaseEnd(builder)

# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TilingProperties(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TilingProperties()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTilingProperties(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TilingProperties
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TilingProperties
    def SizeInPercent(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # TilingProperties
    def Angle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # TilingProperties
    def Spacing(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return None

    # TilingProperties
    def OffsetX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return None

    # TilingProperties
    def OffsetY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return None

def TilingPropertiesStart(builder):
    builder.StartObject(5)

def Start(builder):
    TilingPropertiesStart(builder)

def TilingPropertiesAddSizeInPercent(builder, sizeInPercent):
    builder.PrependFloat64Slot(0, sizeInPercent, 0.0)

def AddSizeInPercent(builder, sizeInPercent):
    TilingPropertiesAddSizeInPercent(builder, sizeInPercent)

def TilingPropertiesAddAngle(builder, angle):
    builder.PrependFloat64Slot(1, angle, 0.0)

def AddAngle(builder, angle):
    TilingPropertiesAddAngle(builder, angle)

def TilingPropertiesAddSpacing(builder, spacing):
    builder.PrependFloat64Slot(2, spacing, None)

def AddSpacing(builder, spacing):
    TilingPropertiesAddSpacing(builder, spacing)

def TilingPropertiesAddOffsetX(builder, offsetX):
    builder.PrependFloat64Slot(3, offsetX, None)

def AddOffsetX(builder, offsetX):
    TilingPropertiesAddOffsetX(builder, offsetX)

def TilingPropertiesAddOffsetY(builder, offsetY):
    builder.PrependFloat64Slot(4, offsetY, None)

def AddOffsetY(builder, offsetY):
    TilingPropertiesAddOffsetY(builder, offsetY)

def TilingPropertiesEnd(builder):
    return builder.EndObject()

def End(builder):
    return TilingPropertiesEnd(builder)

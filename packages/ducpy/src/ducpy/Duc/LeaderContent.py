# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class LeaderContent(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = LeaderContent()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsLeaderContent(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def LeaderContentBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x44\x55\x43\x5F", size_prefixed=size_prefixed)

    # LeaderContent
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # LeaderContent
    def LeaderContentType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return None

    # LeaderContent
    def ContentType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # LeaderContent
    def Content(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

def LeaderContentStart(builder):
    builder.StartObject(3)

def Start(builder):
    LeaderContentStart(builder)

def LeaderContentAddLeaderContentType(builder, leaderContentType):
    builder.PrependUint8Slot(0, leaderContentType, None)

def AddLeaderContentType(builder, leaderContentType):
    LeaderContentAddLeaderContentType(builder, leaderContentType)

def LeaderContentAddContentType(builder, contentType):
    builder.PrependUint8Slot(1, contentType, 0)

def AddContentType(builder, contentType):
    LeaderContentAddContentType(builder, contentType)

def LeaderContentAddContent(builder, content):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(content), 0)

def AddContent(builder, content):
    LeaderContentAddContent(builder, content)

def LeaderContentEnd(builder):
    return builder.EndObject()

def End(builder):
    return LeaderContentEnd(builder)

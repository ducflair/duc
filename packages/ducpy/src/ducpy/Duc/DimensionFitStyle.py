# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DimensionFitStyle(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DimensionFitStyle()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDimensionFitStyle(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def DimensionFitStyleBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x44\x55\x43\x5F", size_prefixed=size_prefixed)

    # DimensionFitStyle
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DimensionFitStyle
    def Rule(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return None

    # DimensionFitStyle
    def TextPlacement(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return None

    # DimensionFitStyle
    def ForceTextInside(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def DimensionFitStyleStart(builder):
    builder.StartObject(3)

def Start(builder):
    DimensionFitStyleStart(builder)

def DimensionFitStyleAddRule(builder, rule):
    builder.PrependUint8Slot(0, rule, None)

def AddRule(builder, rule):
    DimensionFitStyleAddRule(builder, rule)

def DimensionFitStyleAddTextPlacement(builder, textPlacement):
    builder.PrependUint8Slot(1, textPlacement, None)

def AddTextPlacement(builder, textPlacement):
    DimensionFitStyleAddTextPlacement(builder, textPlacement)

def DimensionFitStyleAddForceTextInside(builder, forceTextInside):
    builder.PrependBoolSlot(2, forceTextInside, 0)

def AddForceTextInside(builder, forceTextInside):
    DimensionFitStyleAddForceTextInside(builder, forceTextInside)

def DimensionFitStyleEnd(builder):
    return builder.EndObject()

def End(builder):
    return DimensionFitStyleEnd(builder)

# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class RendererState(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = RendererState()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRendererState(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def RendererStateBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x44\x55\x43\x5F", size_prefixed=size_prefixed)

    # RendererState
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # RendererState
    def DeletedElementIds(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # RendererState
    def DeletedElementIdsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # RendererState
    def DeletedElementIdsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

def RendererStateStart(builder):
    builder.StartObject(1)

def Start(builder):
    RendererStateStart(builder)

def RendererStateAddDeletedElementIds(builder, deletedElementIds):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(deletedElementIds), 0)

def AddDeletedElementIds(builder, deletedElementIds):
    RendererStateAddDeletedElementIds(builder, deletedElementIds)

def RendererStateStartDeletedElementIdsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartDeletedElementIdsVector(builder, numElems):
    return RendererStateStartDeletedElementIdsVector(builder, numElems)

def RendererStateEnd(builder):
    return builder.EndObject()

def End(builder):
    return RendererStateEnd(builder)

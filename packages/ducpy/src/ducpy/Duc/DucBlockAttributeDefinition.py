# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DucBlockAttributeDefinition(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DucBlockAttributeDefinition()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDucBlockAttributeDefinition(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def DucBlockAttributeDefinitionBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x44\x55\x43\x5F", size_prefixed=size_prefixed)

    # DucBlockAttributeDefinition
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DucBlockAttributeDefinition
    def Tag(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # DucBlockAttributeDefinition
    def Prompt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # DucBlockAttributeDefinition
    def DefaultValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # DucBlockAttributeDefinition
    def IsConstant(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def DucBlockAttributeDefinitionStart(builder):
    builder.StartObject(4)

def Start(builder):
    DucBlockAttributeDefinitionStart(builder)

def DucBlockAttributeDefinitionAddTag(builder, tag):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(tag), 0)

def AddTag(builder, tag):
    DucBlockAttributeDefinitionAddTag(builder, tag)

def DucBlockAttributeDefinitionAddPrompt(builder, prompt):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(prompt), 0)

def AddPrompt(builder, prompt):
    DucBlockAttributeDefinitionAddPrompt(builder, prompt)

def DucBlockAttributeDefinitionAddDefaultValue(builder, defaultValue):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(defaultValue), 0)

def AddDefaultValue(builder, defaultValue):
    DucBlockAttributeDefinitionAddDefaultValue(builder, defaultValue)

def DucBlockAttributeDefinitionAddIsConstant(builder, isConstant):
    builder.PrependBoolSlot(3, isConstant, 0)

def AddIsConstant(builder, isConstant):
    DucBlockAttributeDefinitionAddIsConstant(builder, isConstant)

def DucBlockAttributeDefinitionEnd(builder):
    return builder.EndObject()

def End(builder):
    return DucBlockAttributeDefinitionEnd(builder)

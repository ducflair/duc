# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DucFeatureControlFrameStyle(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DucFeatureControlFrameStyle()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDucFeatureControlFrameStyle(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def DucFeatureControlFrameStyleBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x44\x55\x43\x5F", size_prefixed=size_prefixed)

    # DucFeatureControlFrameStyle
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DucFeatureControlFrameStyle
    def BaseStyle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Duc._DucElementStylesBase import _DucElementStylesBase
            obj = _DucElementStylesBase()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DucFeatureControlFrameStyle
    def TextStyle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Duc.DucTextStyle import DucTextStyle
            obj = DucTextStyle()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DucFeatureControlFrameStyle
    def Layout(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Duc.FCFLayoutStyle import FCFLayoutStyle
            obj = FCFLayoutStyle()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DucFeatureControlFrameStyle
    def Symbols(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Duc.FCFSymbolStyle import FCFSymbolStyle
            obj = FCFSymbolStyle()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DucFeatureControlFrameStyle
    def DatumStyle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Duc.FCFDatumStyle import FCFDatumStyle
            obj = FCFDatumStyle()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def DucFeatureControlFrameStyleStart(builder):
    builder.StartObject(5)

def Start(builder):
    DucFeatureControlFrameStyleStart(builder)

def DucFeatureControlFrameStyleAddBaseStyle(builder, baseStyle):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(baseStyle), 0)

def AddBaseStyle(builder, baseStyle):
    DucFeatureControlFrameStyleAddBaseStyle(builder, baseStyle)

def DucFeatureControlFrameStyleAddTextStyle(builder, textStyle):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(textStyle), 0)

def AddTextStyle(builder, textStyle):
    DucFeatureControlFrameStyleAddTextStyle(builder, textStyle)

def DucFeatureControlFrameStyleAddLayout(builder, layout):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(layout), 0)

def AddLayout(builder, layout):
    DucFeatureControlFrameStyleAddLayout(builder, layout)

def DucFeatureControlFrameStyleAddSymbols(builder, symbols):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(symbols), 0)

def AddSymbols(builder, symbols):
    DucFeatureControlFrameStyleAddSymbols(builder, symbols)

def DucFeatureControlFrameStyleAddDatumStyle(builder, datumStyle):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(datumStyle), 0)

def AddDatumStyle(builder, datumStyle):
    DucFeatureControlFrameStyleAddDatumStyle(builder, datumStyle)

def DucFeatureControlFrameStyleEnd(builder):
    return builder.EndObject()

def End(builder):
    return DucFeatureControlFrameStyleEnd(builder)

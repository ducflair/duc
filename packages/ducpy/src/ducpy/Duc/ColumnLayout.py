# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ColumnLayout(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ColumnLayout()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsColumnLayout(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def ColumnLayoutBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x44\x55\x43\x5F", size_prefixed=size_prefixed)

    # ColumnLayout
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ColumnLayout
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return None

    # ColumnLayout
    def Definitions(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from Duc.TextColumn import TextColumn
            obj = TextColumn()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ColumnLayout
    def DefinitionsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ColumnLayout
    def DefinitionsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

    # ColumnLayout
    def AutoHeight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def ColumnLayoutStart(builder):
    builder.StartObject(3)

def Start(builder):
    ColumnLayoutStart(builder)

def ColumnLayoutAddType(builder, type):
    builder.PrependUint8Slot(0, type, None)

def AddType(builder, type):
    ColumnLayoutAddType(builder, type)

def ColumnLayoutAddDefinitions(builder, definitions):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(definitions), 0)

def AddDefinitions(builder, definitions):
    ColumnLayoutAddDefinitions(builder, definitions)

def ColumnLayoutStartDefinitionsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartDefinitionsVector(builder, numElems):
    return ColumnLayoutStartDefinitionsVector(builder, numElems)

def ColumnLayoutAddAutoHeight(builder, autoHeight):
    builder.PrependBoolSlot(2, autoHeight, 0)

def AddAutoHeight(builder, autoHeight):
    ColumnLayoutAddAutoHeight(builder, autoHeight)

def ColumnLayoutEnd(builder):
    return builder.EndObject()

def End(builder):
    return ColumnLayoutEnd(builder)

# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TextColumn(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TextColumn()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTextColumn(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def TextColumnBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x44\x55\x43\x5F", size_prefixed=size_prefixed)

    # TextColumn
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TextColumn
    def Width(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # TextColumn
    def Gutter(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

def TextColumnStart(builder):
    builder.StartObject(2)

def Start(builder):
    TextColumnStart(builder)

def TextColumnAddWidth(builder, width):
    builder.PrependFloat64Slot(0, width, 0.0)

def AddWidth(builder, width):
    TextColumnAddWidth(builder, width)

def TextColumnAddGutter(builder, gutter):
    builder.PrependFloat64Slot(1, gutter, 0.0)

def AddGutter(builder, gutter):
    TextColumnAddGutter(builder, gutter)

def TextColumnEnd(builder):
    return builder.EndObject()

def End(builder):
    return TextColumnEnd(builder)

# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DucTextDynamicSource(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DucTextDynamicSource()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDucTextDynamicSource(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def DucTextDynamicSourceBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x44\x55\x43\x5F", size_prefixed=size_prefixed)

    # DucTextDynamicSource
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DucTextDynamicSource
    def TextSourceType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return None

    # DucTextDynamicSource
    def SourceType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # DucTextDynamicSource
    def Source(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

def DucTextDynamicSourceStart(builder):
    builder.StartObject(3)

def Start(builder):
    DucTextDynamicSourceStart(builder)

def DucTextDynamicSourceAddTextSourceType(builder, textSourceType):
    builder.PrependUint8Slot(0, textSourceType, None)

def AddTextSourceType(builder, textSourceType):
    DucTextDynamicSourceAddTextSourceType(builder, textSourceType)

def DucTextDynamicSourceAddSourceType(builder, sourceType):
    builder.PrependUint8Slot(1, sourceType, 0)

def AddSourceType(builder, sourceType):
    DucTextDynamicSourceAddSourceType(builder, sourceType)

def DucTextDynamicSourceAddSource(builder, source):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(source), 0)

def AddSource(builder, source):
    DucTextDynamicSourceAddSource(builder, source)

def DucTextDynamicSourceEnd(builder):
    return builder.EndObject()

def End(builder):
    return DucTextDynamicSourceEnd(builder)

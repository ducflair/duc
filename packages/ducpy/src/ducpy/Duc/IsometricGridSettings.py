# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class IsometricGridSettings(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = IsometricGridSettings()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsIsometricGridSettings(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def IsometricGridSettingsBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x44\x55\x43\x5F", size_prefixed=size_prefixed)

    # IsometricGridSettings
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # IsometricGridSettings
    def LeftAngle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # IsometricGridSettings
    def RightAngle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

def IsometricGridSettingsStart(builder):
    builder.StartObject(2)

def Start(builder):
    IsometricGridSettingsStart(builder)

def IsometricGridSettingsAddLeftAngle(builder, leftAngle):
    builder.PrependFloat64Slot(0, leftAngle, 0.0)

def AddLeftAngle(builder, leftAngle):
    IsometricGridSettingsAddLeftAngle(builder, leftAngle)

def IsometricGridSettingsAddRightAngle(builder, rightAngle):
    builder.PrependFloat64Slot(1, rightAngle, 0.0)

def AddRightAngle(builder, rightAngle):
    IsometricGridSettingsAddRightAngle(builder, rightAngle)

def IsometricGridSettingsEnd(builder):
    return builder.EndObject()

def End(builder):
    return IsometricGridSettingsEnd(builder)

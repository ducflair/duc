# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class PolarGridSettings(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PolarGridSettings()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsPolarGridSettings(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def PolarGridSettingsBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x44\x55\x43\x5F", size_prefixed=size_prefixed)

    # PolarGridSettings
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PolarGridSettings
    def RadialDivisions(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PolarGridSettings
    def RadialSpacing(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # PolarGridSettings
    def ShowLabels(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def PolarGridSettingsStart(builder):
    builder.StartObject(3)

def Start(builder):
    PolarGridSettingsStart(builder)

def PolarGridSettingsAddRadialDivisions(builder, radialDivisions):
    builder.PrependInt32Slot(0, radialDivisions, 0)

def AddRadialDivisions(builder, radialDivisions):
    PolarGridSettingsAddRadialDivisions(builder, radialDivisions)

def PolarGridSettingsAddRadialSpacing(builder, radialSpacing):
    builder.PrependFloat64Slot(1, radialSpacing, 0.0)

def AddRadialSpacing(builder, radialSpacing):
    PolarGridSettingsAddRadialSpacing(builder, radialSpacing)

def PolarGridSettingsAddShowLabels(builder, showLabels):
    builder.PrependBoolSlot(2, showLabels, 0)

def AddShowLabels(builder, showLabels):
    PolarGridSettingsAddShowLabels(builder, showLabels)

def PolarGridSettingsEnd(builder):
    return builder.EndObject()

def End(builder):
    return PolarGridSettingsEnd(builder)

# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DucLayer(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DucLayer()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDucLayer(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def DucLayerBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x44\x55\x43\x5F", size_prefixed=size_prefixed)

    # DucLayer
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DucLayer
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # DucLayer
    def StackBase(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Duc._DucStackBase import _DucStackBase
            obj = _DucStackBase()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DucLayer
    def Readonly(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # DucLayer
    def Overrides(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Duc.DucLayerOverrides import DucLayerOverrides
            obj = DucLayerOverrides()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def DucLayerStart(builder):
    builder.StartObject(4)

def Start(builder):
    DucLayerStart(builder)

def DucLayerAddId(builder, id):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)

def AddId(builder, id):
    DucLayerAddId(builder, id)

def DucLayerAddStackBase(builder, stackBase):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(stackBase), 0)

def AddStackBase(builder, stackBase):
    DucLayerAddStackBase(builder, stackBase)

def DucLayerAddReadonly(builder, readonly):
    builder.PrependBoolSlot(2, readonly, 0)

def AddReadonly(builder, readonly):
    DucLayerAddReadonly(builder, readonly)

def DucLayerAddOverrides(builder, overrides):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(overrides), 0)

def AddOverrides(builder, overrides):
    DucLayerAddOverrides(builder, overrides)

def DucLayerEnd(builder):
    return builder.EndObject()

def End(builder):
    return DucLayerEnd(builder)

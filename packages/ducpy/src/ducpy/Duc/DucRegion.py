# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DucRegion(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DucRegion()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDucRegion(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def DucRegionBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x44\x55\x43\x5F", size_prefixed=size_prefixed)

    # DucRegion
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DucRegion
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # DucRegion
    def StackBase(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Duc._DucStackBase import _DucStackBase
            obj = _DucStackBase()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DucRegion
    def BooleanOperation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return None

def DucRegionStart(builder):
    builder.StartObject(3)

def Start(builder):
    DucRegionStart(builder)

def DucRegionAddId(builder, id):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)

def AddId(builder, id):
    DucRegionAddId(builder, id)

def DucRegionAddStackBase(builder, stackBase):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(stackBase), 0)

def AddStackBase(builder, stackBase):
    DucRegionAddStackBase(builder, stackBase)

def DucRegionAddBooleanOperation(builder, booleanOperation):
    builder.PrependUint8Slot(2, booleanOperation, None)

def AddBooleanOperation(builder, booleanOperation):
    DucRegionAddBooleanOperation(builder, booleanOperation)

def DucRegionEnd(builder):
    return builder.EndObject()

def End(builder):
    return DucRegionEnd(builder)

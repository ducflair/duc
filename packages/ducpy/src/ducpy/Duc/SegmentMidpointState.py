# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SegmentMidpointState(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SegmentMidpointState()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSegmentMidpointState(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def SegmentMidpointStateBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x44\x55\x43\x5F", size_prefixed=size_prefixed)

    # SegmentMidpointState
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SegmentMidpointState
    def Value(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Duc.Point import Point
            obj = Point()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # SegmentMidpointState
    def Index(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # SegmentMidpointState
    def Added(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def SegmentMidpointStateStart(builder):
    builder.StartObject(3)

def Start(builder):
    SegmentMidpointStateStart(builder)

def SegmentMidpointStateAddValue(builder, value):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(value), 0)

def AddValue(builder, value):
    SegmentMidpointStateAddValue(builder, value)

def SegmentMidpointStateAddIndex(builder, index):
    builder.PrependInt32Slot(1, index, 0)

def AddIndex(builder, index):
    SegmentMidpointStateAddIndex(builder, index)

def SegmentMidpointStateAddAdded(builder, added):
    builder.PrependBoolSlot(2, added, 0)

def AddAdded(builder, added):
    SegmentMidpointStateAddAdded(builder, added)

def SegmentMidpointStateEnd(builder):
    return builder.EndObject()

def End(builder):
    return SegmentMidpointStateEnd(builder)

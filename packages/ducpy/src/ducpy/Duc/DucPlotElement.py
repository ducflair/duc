# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Duc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DucPlotElement(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DucPlotElement()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDucPlotElement(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def DucPlotElementBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x44\x55\x43\x5F", size_prefixed=size_prefixed)

    # DucPlotElement
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DucPlotElement
    def StackElementBase(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Duc._DucStackElementBase import _DucStackElementBase
            obj = _DucStackElementBase()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DucPlotElement
    def Style(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Duc.DucPlotStyle import DucPlotStyle
            obj = DucPlotStyle()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DucPlotElement
    def Layout(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Duc.PlotLayout import PlotLayout
            obj = PlotLayout()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def DucPlotElementStart(builder):
    builder.StartObject(3)

def Start(builder):
    DucPlotElementStart(builder)

def DucPlotElementAddStackElementBase(builder, stackElementBase):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(stackElementBase), 0)

def AddStackElementBase(builder, stackElementBase):
    DucPlotElementAddStackElementBase(builder, stackElementBase)

def DucPlotElementAddStyle(builder, style):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(style), 0)

def AddStyle(builder, style):
    DucPlotElementAddStyle(builder, style)

def DucPlotElementAddLayout(builder, layout):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(layout), 0)

def AddLayout(builder, layout):
    DucPlotElementAddLayout(builder, layout)

def DucPlotElementEnd(builder):
    return builder.EndObject()

def End(builder):
    return DucPlotElementEnd(builder)
